
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    map $http_upgrade $connection_upgrade {
    		default upgrade;
    		''      close;
    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    upstream nodes {
    		server 172.18.0.3:8080;
    		server 172.18.0.4:8080;
    		server 172.18.0.5:8080;
    }

    server {
        listen      80;
        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass  http://nodes;
                    #Proxy Settings
                    proxy_redirect    off;
                    proxy_set_header  Host            $host;
                    proxy_set_header  X-Real-IP        $remote_addr;
                    proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
                    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                    proxy_max_temp_file_size 0;
                    proxy_connect_timeout      90;
                    proxy_send_timeout        90;
                    proxy_read_timeout        90;
                    proxy_buffer_size          4k;
                    proxy_buffers              4 32k;
                    proxy_busy_buffers_size    64k;
                    proxy_temp_file_write_size 64k;
                    ## set upload file size
                    client_max_body_size 20m;
            #root   /usr/share/nginx/html/static;
            #index  index.html index.htm;
        }

        location /wss {
        			proxy_pass  http://nodes;
        			proxy_http_version 1.1;
        			proxy_set_header Upgrade $http_upgrade;
        			proxy_set_header Connection $connection_upgrade;
        			proxy_read_timeout 3600;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        #配置Nginx动静分离，定义的静态页面直接从Nginx发布目录读取。
        location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css)$
        {
            gzip on;
        	gzip_min_length 1k;
        	gzip_buffers 4 16k;
        	#gzip_http_version 1.0;
        	gzip_comp_level 9;
        	gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
        	gzip_vary off;
        	gzip_disable "MSIE [1-6]\.";
        	root   /usr/share/nginx/html/static;
        	#expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省带宽和缓解服务器的压力
        	expires      7d;
        }
    }
}
